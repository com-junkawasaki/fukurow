name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Run tests
      run: cargo test --workspace --release

    - name: Build release binaries
      run: |
        cargo build --release --bin fukurow-cli
        cargo build --release --target wasm32-unknown-unknown --manifest-path crates/fukurow-wasm/Cargo.toml

    - name: Create release archives
      run: |
        # CLI binary
        tar -czf fukurow-cli-linux-x64.tar.gz -C target/release fukurow-cli

        # WASM package
        mkdir -p fukurow-wasm
        cp target/wasm32-unknown-unknown/release/fukurow_wasm.wasm fukurow-wasm/
        cp crates/fukurow-wasm/src/lib.rs fukurow-wasm/
        tar -czf fukurow-wasm.tar.gz fukurow-wasm/

    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

        # Generate changelog from commits since last tag
        if git describe --tags --abbrev=0 HEAD~1 >/dev/null 2>&1; then
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD~1)
          echo "## Changes since $LAST_TAG" > changelog.md
          git log --pretty=format:"- %s (%h)" $LAST_TAG..HEAD >> changelog.md
        else
          echo "## Initial release" > changelog.md
          git log --pretty=format:"- %s (%h)" --max-count=20 >> changelog.md
        fi

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.changelog.outputs.version }}
        body_path: changelog.md
        draft: false
        prerelease: false

    - name: Upload CLI binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./fukurow-cli-linux-x64.tar.gz
        asset_name: fukurow-cli-linux-x64.tar.gz
        asset_content_type: application/gzip

    - name: Upload WASM package
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./fukurow-wasm.tar.gz
        asset_name: fukurow-wasm.tar.gz
        asset_content_type: application/gzip

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Publish crates to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
      run: |
        # Wait for release creation
        sleep 60

        # Publish in dependency order
        echo "Publishing fukurow-core..."
        cargo publish --manifest-path crates/fukurow-core/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-store..."
        cargo publish --manifest-path crates/fukurow-store/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-rules..."
        cargo publish --manifest-path crates/fukurow-rules/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-sparql..."
        cargo publish --manifest-path crates/fukurow-sparql/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-shacl..."
        cargo publish --manifest-path crates/fukurow-shacl/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-rdfs..."
        cargo publish --manifest-path crates/fukurow-rdfs/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-lite..."
        cargo publish --manifest-path crates/fukurow-lite/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-dl..."
        cargo publish --manifest-path crates/fukurow-dl/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-engine..."
        cargo publish --manifest-path crates/fukurow-engine/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-domain-cyber..."
        cargo publish --manifest-path crates/fukurow-domain-cyber/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-siem..."
        cargo publish --manifest-path crates/fukurow-siem/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-api..."
        cargo publish --manifest-path crates/fukurow-api/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow-cli..."
        cargo publish --manifest-path crates/fukurow-cli/Cargo.toml --no-verify
        sleep 30

        echo "Publishing fukurow (main crate)..."
        cargo publish --manifest-path crates/fukurow/Cargo.toml --no-verify

  update-homebrew:
    name: Update Homebrew Formula
    runs-on: ubuntu-latest
    needs: release
    if: github.repository == 'gftdcojp/fukurow'
    steps:
    - name: Checkout homebrew-tap
      uses: actions/checkout@v4
      with:
        repository: gftdcojp/homebrew-tap
        path: homebrew-tap
        token: ${{ secrets.HOMEBREW_TAP_TOKEN }}

    - name: Update formula
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        SHA256=$(curl -sL https://github.com/gftdcojp/fukurow/releases/download/v${VERSION}/fukurow-cli-linux-x64.tar.gz | sha256sum | cut -d' ' -f1)

        cd homebrew-tap
        sed -i "s/version \".*\"/version \"${VERSION}\"/" Formula/fukurow.rb
        sed -i "s/sha256 \".*\"/sha256 \"${SHA256}\"/" Formula/fukurow.rb

        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add Formula/fukurow.rb
        git commit -m "Update fukurow to ${VERSION}"
        git push
